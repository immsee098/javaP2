/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.myapp.member.view;

import com.myapp.member.model.MemberDAO;
import com.myapp.member.model.MemberDTO;
import com.myapp.member.model.MemberService;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author EZEN
 */
public class MemberFrame extends javax.swing.JFrame 
            implements ActionListener, ItemListener{
    public static final int MEMBER_REGISTER=1;  //회원가입 flag
    public static final int MEMBER_EDIT=2; //회원정보수정 flag
    
    private LoginGUI loginGui;
    private int memberFlag; //회원가입인지 수정인지
    
    private MemberDAO memberDao;
    
    private String[] emailList
            ={"naver.com","gmail.com","nate.com","daum.net","직접입력"};
    
    private boolean dupCheck;  //중복확인 여부

    public boolean isDupCheck() {
        return dupCheck;
    }

    public void setDupCheck(boolean dupCheck) {
        this.dupCheck = dupCheck;
    }
    
    
    /**
     * Creates new form MemberFrame
     */
    public MemberFrame() {
        initComponents();
        
        memberDao = new MemberDAO();
        init();
        
        addEvent();        
    }

    public MemberFrame(int flag, LoginGUI loginGui) {
        this();
        
        //
        this.memberFlag=flag;
        this.loginGui=loginGui;
        
        memberProcess();
    }

    public MemberFrame(int flag) {
        this();
        
        //
        this.memberFlag=flag;
        memberProcess();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        tfName = new javax.swing.JTextField();
        tfUserid = new javax.swing.JTextField();
        tfEmail1 = new javax.swing.JTextField();
        tfPwd = new javax.swing.JPasswordField();
        jLabel9 = new javax.swing.JLabel();
        tfEmail3 = new javax.swing.JTextField();
        cbEmail2 = new javax.swing.JComboBox<>();
        btDup = new javax.swing.JButton();
        cbHp1 = new javax.swing.JComboBox<>();
        tfHp2 = new javax.swing.JTextField();
        tfHp3 = new javax.swing.JTextField();
        tfZipcode = new javax.swing.JTextField();
        tfAddress1 = new javax.swing.JTextField();
        tfAddress2 = new javax.swing.JTextField();
        btRegister = new javax.swing.JButton();
        btCancel = new javax.swing.JButton();
        btZipcode = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("회원가입");

        jLabel1.setText("이름");

        jLabel2.setText("아이디");

        jLabel3.setText("비밀번호");

        jLabel4.setText("이메일");

        jLabel5.setText("전화번호");

        jLabel6.setText("우편번호");

        jLabel7.setText("주소");

        jLabel8.setText("상세주소");

        jLabel9.setText("@");

        cbEmail2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btDup.setText("중복확인");

        cbHp1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btRegister.setText("회원가입");

        btCancel.setText("취소");

        btZipcode.setText("우편번호 찾기");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(btRegister)
                        .addGap(37, 37, 37)
                        .addComponent(btCancel)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbEmail2, 0, 95, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tfAddress1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(cbHp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfHp2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfHp3, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(tfPwd, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 146, Short.MAX_VALUE)
                                            .addComponent(tfName, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfUserid, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btDup))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btZipcode)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(tfAddress2))
                        .addGap(23, 23, 23))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfUserid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btDup))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfPwd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tfEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(tfEmail3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbEmail2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbHp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHp2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfHp3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(tfZipcode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btZipcode)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(tfAddress1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfAddress2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btRegister)
                    .addComponent(btCancel))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MemberFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MemberFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btCancel;
    private javax.swing.JButton btDup;
    private javax.swing.JButton btRegister;
    private javax.swing.JButton btZipcode;
    private javax.swing.JComboBox<String> cbEmail2;
    private javax.swing.JComboBox<String> cbHp1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    public javax.swing.JTextField tfAddress1;
    private javax.swing.JTextField tfAddress2;
    private javax.swing.JTextField tfEmail1;
    private javax.swing.JTextField tfEmail3;
    private javax.swing.JTextField tfHp2;
    private javax.swing.JTextField tfHp3;
    private javax.swing.JTextField tfName;
    private javax.swing.JPasswordField tfPwd;
    public javax.swing.JTextField tfUserid;
    public javax.swing.JTextField tfZipcode;
    // End of variables declaration//GEN-END:variables

    private void init() {
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); //자신의 창만 닫히도록
        
        String[] hpList={"010","011","016","017","018","019"};
        DefaultComboBoxModel cbmodel1 = new DefaultComboBoxModel(hpList);
        cbHp1.setModel(cbmodel1);
        
        DefaultComboBoxModel cbmodel2 = new DefaultComboBoxModel(emailList);
        cbEmail2.setModel(cbmodel2);
        
        tfEmail3.setEnabled(false);
        tfZipcode.setEditable(false);
        tfAddress1.setEditable(false);
    }

    private void addEvent() {
        btRegister.addActionListener(this);
        btCancel.addActionListener(this);
        cbEmail2.addItemListener(this);
        btDup.addActionListener(this);
        btZipcode.addActionListener(this);
    }

    private void memberProcess() {
        if(memberFlag==MEMBER_REGISTER){
            //회원가입인 경우
            this.setTitle("회원가입");
            btRegister.setText("회원가입");
        }else if(memberFlag==MEMBER_EDIT){
            //회원정보 수정인 경우
            this.setTitle("회원정보 수정");
            btRegister.setText("수정");
            
            editingComponent();
            
            //기존 회원정보 조회
            showMember();
        }
        
    }

    private void editingComponent() {
        tfUserid.setEditable(false);
        tfName.setEditable(false);
        btDup.setEnabled(false);
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        if(e.getSource()==btRegister){
            try{
                if(memberFlag==MEMBER_REGISTER){
                    //회원가입 처리
                    register();
                }else if(memberFlag==MEMBER_EDIT){
                    //회원수정 처리
                    edit();
                }
            }catch(SQLException ex){
                ex.printStackTrace();
            }
        }else if(e.getSource()==btCancel){
            
        }else if(e.getSource()==btDup){
            String userid=tfUserid.getText();
            SubUserid f= new SubUserid(this, userid);
            f.setVisible(true);
        }else if(e.getSource()==btZipcode){
            //우편번호 찾기
            SubZipcode f = new SubZipcode(this);
            f.setVisible(true);
        }
        
    }

    private void register() throws SQLException {
        //1
        String email2=(String) cbEmail2.getSelectedItem();
        System.out.println("email2="+email2+", index="
                + cbEmail2.getSelectedIndex());
        
        String hp1=(String) cbHp1.getSelectedItem();
        
        String address1=tfAddress1.getText();
        String address2=tfAddress2.getText();
        String email1=tfEmail1.getText();
        String email3=tfEmail3.getText();
        String hp2=tfHp2.getText();
        String hp3=tfHp3.getText();
        String name=tfName.getText();
        String pwd=tfPwd.getText();
        String userid=tfUserid.getText();
        String zipcode=tfZipcode.getText();
        
        if(name==null || name.isEmpty()){
            JOptionPane.showMessageDialog(this, "이름을 입력하세요");
            tfName.requestFocus();
            return;
        }else if(userid==null || userid.isEmpty()){
            JOptionPane.showMessageDialog(this, "아이디를 입력하세요");
            tfUserid.requestFocus();
            return;            
        }else if(pwd==null || pwd.isEmpty()){
            JOptionPane.showMessageDialog(this, "비밀번호를 입력하세요");
            tfPwd.requestFocus();
            return;            
        }else if(!dupCheck){
            JOptionPane.showMessageDialog(this, "아이디 중복확인을 하세요");
            btDup.requestFocus();
            return;            
        }
        
        String hp="";
        if(hp2!=null && !hp2.isEmpty() && hp3!=null && !hp3.isEmpty()){
            hp=hp1+"-"+hp2+"-"+hp3;
        }
        
        String email="";
        if(email1!=null && !email1.isEmpty()){
            if(email2.equals("직접입력")){
                if(email3!=null && !email3.isEmpty()){
                    email=email1+"@"+email3;                
                }
            }else{
                email=email1+"@"+email2;
            }
        }
        
        //2
        MemberDTO dto = new MemberDTO();
        dto.setAddress1(address1);
        dto.setAddress2(address2);
        dto.setEmail(email);
        dto.setHp(hp);
        dto.setName(name);
        dto.setPwd(pwd);
        dto.setUserid(userid);
        dto.setZipcode(zipcode);
        
        int cnt=memberDao.insertMember(dto);
        
        //3
        if(cnt>0){
            JOptionPane.showMessageDialog(this, "회원가입되었습니다.");
            this.dispose();
            loginGui.tfUserid.setText(tfUserid.getText());
        }else{
            JOptionPane.showMessageDialog(this, "회원가입 실패!");            
        }
    }

    private void edit() throws SQLException {
        //1
        String email2=(String) cbEmail2.getSelectedItem();
        System.out.println("email2="+email2+", index="
                + cbEmail2.getSelectedIndex());
        
        String hp1=(String) cbHp1.getSelectedItem();
        
        String address1=tfAddress1.getText();
        String address2=tfAddress2.getText();
        String email1=tfEmail1.getText();
        String email3=tfEmail3.getText();
        String hp2=tfHp2.getText();
        String hp3=tfHp3.getText();
        String pwd=tfPwd.getText();
        String zipcode=tfZipcode.getText();
        
        String hp="";
        if(hp2!=null && !hp2.isEmpty() && hp3!=null && !hp3.isEmpty()){
            hp=hp1+"-"+hp2+"-"+hp3;
        }
        
        String email="";
        if(email1!=null && !email1.isEmpty()){
            if(email2.equals("직접입력")){
                if(email3!=null && !email3.isEmpty()){
                    email=email1+"@"+email3;                
                }
            }else{
                email=email1+"@"+email2;
            }
        }
        
        //2
        MemberDTO dto = new MemberDTO();
        dto.setAddress1(address1);
        dto.setAddress2(address2);
        dto.setEmail(email);
        dto.setHp(hp);
        dto.setPwd(pwd);
        dto.setUserid(MemberService.getUserid());
        dto.setZipcode(zipcode);
        
        int cnt=memberDao.updateMember(dto);
        
        //3
        if(cnt>0){
            JOptionPane.showMessageDialog(this, "회원정보 수정되었습니다.");            
        }else{
            JOptionPane.showMessageDialog(this, "회원정보 수정 실패!");            
        }
        
    }

    private void showMember() {
        //1
        String userid=MemberService.getUserid();
        
        try {
            //2
            MemberDTO dto=memberDao.selectMember(userid);
            
            //3
            tfAddress1.setText(dto.getAddress1());
            tfAddress2.setText(dto.getAddress2());
            tfName.setText(dto.getName());
            tfUserid.setText(dto.getUserid());
            tfZipcode.setText(dto.getZipcode());
            
            String hp=dto.getHp();
            String hp1="", hp2="",hp3="";
            if(hp!=null && !hp.isEmpty()){
                String[] arr=hp.split("-");
                hp1=arr[0];
                hp2=arr[1];
                hp3=arr[2];                
            }
            cbHp1.setSelectedItem(hp1);
            tfHp2.setText(hp2);
            tfHp3.setText(hp3);
            
            String email=dto.getEmail(); //aa@naver.com, bb@ezen.com, ""
            String email1="", email2="";
            boolean existEmail=false;
            if(email!=null && !email.isEmpty()){
                String[] arr=email.split("@");
                email1=arr[0]; //aa, bb
                email2=arr[1]; //naver.com, ezen.com
                
                for(int i=0;i<emailList.length;i++){
                    if(email2.equals(emailList[i])){
                        existEmail=true; //이메일 목록에 존재
                        break;
                    }
                }//for
                
                tfEmail1.setText(email1);
                
                if(existEmail){
                    cbEmail2.setSelectedItem(email2);
                }else{
                    tfEmail3.setText(email2);
                    cbEmail2.setSelectedItem("직접입력");
                }
            }//if            
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
        
    }

    @Override
    public void itemStateChanged(ItemEvent e) {
        if(e.getSource()==cbEmail2){
            if(e.getStateChange()==ItemEvent.SELECTED){
                System.out.println("e.getItem()="+e.getItem());
                System.out.println("selItem="+cbEmail2.getSelectedItem());
                System.out.println("selIndex="+cbEmail2.getSelectedIndex());
                
                if(e.getItem().equals("직접입력")){
                    tfEmail3.setEnabled(true);                    
                    tfEmail3.requestFocus();
                }else{
                    tfEmail3.setEnabled(false);   
                    tfEmail3.setText("");                 
                }
            }
        }
    }

   
}
